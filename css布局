## CSS 布局 
---------------------
http://zh.learnlayout.com/
.clearfix {
  overflow: auto;
}

.after-box {
  clear: left;
}

 box-sizing: border-box; 
 
 max-width
 
 display: inline-block;
 

 
 .column {
  column-count: 3;
  column-gap: 1em;
}

 vertical-align 
 
 http://www.ruanyifeng.com/blog/2015/07/flex-examples.html
 设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。
  display: flex;|display: inline-flex
容器属性：
flex-direction: row | row-reverse | column | column-reverse;主轴的方向
flex-wrap：nowrap | wrap | wrap-reverse;换行的方式
flex-flow: <flex-direction> || <flex-wrap>;
justify-content: flex-start | flex-end | center | space-between | space-around;主轴上的对齐方式。
align-items: flex-start | flex-end | center | baseline | stretch;交叉轴上的对齐方式。
align-content: flex-start | flex-end | center | space-between | space-around | stretch;多跟轴线的对齐方式

项目属性：
 order: <integer>;定义项目的排列顺序。数值越小，排列越靠前，默认为0。
 flex-grow: <number>;属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。
 flex-shrink: <number>;定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。
 flex-basis: <length> | auto; /* default auto */分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。
 flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ] flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。
 align-self: auto | flex-start | flex-end | center | baseline | stretch;属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。
